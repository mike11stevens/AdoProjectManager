@{
    Layout = "_Layout";
}

@model List<AdoProjectManager.Models.AdoProject>

@{
    ViewData["Title"] = "Projects";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="bi bi-folder2-open"></i> Azure DevOps Projects</h1>
    <div>
        <button class="btn btn-outline-primary" onclick="location.reload()">
            <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
    </div>
</div>

<!-- Search Filter -->
<div class="row mb-4">
    <div class="col-md-6">
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-search"></i>
            </span>
            <input type="text" class="form-control" id="projectSearch" placeholder="Search projects by name..." 
                   onkeyup="filterProjects()" autocomplete="off">
            <button class="btn btn-outline-secondary" type="button" onclick="clearSearch()">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <small class="text-muted">Use * for wildcard matching (e.g., "Test*" or "*API*")</small>
    </div>
    <div class="col-md-6 text-end">
        <small class="text-muted" id="projectCount"></small>
    </div>
</div>



@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
        @if (ViewBag.ShowSettingsLink == true)
        {
            <div class="mt-2">
                <a href="/Home/Settings" class="btn btn-sm btn-outline-danger">
                    <i class="bi bi-gear"></i> Configure Settings
                </a>
            </div>
        }
    </div>
}

@if (ViewBag.IsConfigurationMissing == true)
{
    <div class="card border-warning mb-4">
        <div class="card-body text-center">
            <h4 class="card-title text-warning">
                <i class="bi bi-gear-fill"></i> Welcome to Azure DevOps Project Manager
            </h4>
            <p class="card-text">
                Get started by configuring your Azure DevOps connection settings. You'll need:
            </p>
            <ul class="list-unstyled">
                <li><i class="bi bi-check-circle text-success"></i> Your Azure DevOps organization URL</li>
                <li><i class="bi bi-check-circle text-success"></i> A Personal Access Token (PAT) with appropriate permissions</li>
            </ul>
            <a href="/Home/Settings" class="btn btn-warning btn-lg">
                <i class="bi bi-gear"></i> Configure Now
            </a>
        </div>
    </div>
}

@if (Model.Count == 0 && ViewBag.IsConfigurationMissing != true)
{
    <div class="text-center py-5">
        <i class="bi bi-inbox" style="font-size: 3rem; color: #6c757d;"></i>
        <h3 class="mt-3 text-muted">No projects found</h3>
        <p class="text-muted">Your Azure DevOps organization appears to have no projects, or they may not be accessible with your current permissions.</p>
        <div class="mt-3">
            <a href="/Home/Settings" class="btn btn-outline-primary me-2">
                <i class="bi bi-gear"></i> Check Settings
            </a>
            <button class="btn btn-primary" onclick="location.reload()">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
        </div>
    </div>
}
        </a>
    </div>
}
else
{
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Available Projects</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Project Name</th>
                            <th>Description</th>
                            <th>Visibility</th>
                            <th>Last Updated</th>
                            <th>Repositories</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model)
                        {
                            <tr>
                                <td>
                                    <strong>@project.Name</strong>
                                    <br>
                                    <small class="text-muted">ID: @project.Id</small>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(project.Description))
                                    {
                                        <span>@project.Description</span>
                                    }
                                    else
                                    {
                                        <em class="text-muted">No description</em>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@project.Visibility</span>
                                </td>
                                <td>
                                    @project.LastUpdateTime.ToString("MMM dd, yyyy")
                                </td>
                                <td>
                                    <span class="badge bg-info">@project.Repositories.Count repo@(project.Repositories.Count != 1 ? "s" : "")</span>
                                </td>
                                <td>
                                    <a href="@Url.Action("Configure", "ProjectClone", new { projectId = project.Id })" 
                                       class="btn btn-success btn-sm">
                                        <i class="bi bi-copy"></i> Clone Project
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Initialize project count display on page load
        document.addEventListener('DOMContentLoaded', function() {
            updateProjectCount();
        });

        function filterProjects() {
            const searchTerm = document.getElementById('projectSearch').value.trim();
            const rows = document.querySelectorAll('tbody tr');
            let visibleCount = 0;

            if (searchTerm === '') {
                // Show all rows if search is empty
                rows.forEach(row => {
                    row.style.display = '';
                    visibleCount++;
                });
            } else {
                // Convert search term to regex pattern for wildcard matching
                const pattern = searchTerm
                    .replace(/\*/g, '.*')  // Replace * with .*
                    .replace(/\?/g, '.')   // Replace ? with .
                    .toLowerCase();
                
                const regex = new RegExp('^' + pattern + '$', 'i');

                rows.forEach(row => {
                    const projectNameCell = row.querySelector('td:first-child strong');
                    if (projectNameCell) {
                        const projectName = projectNameCell.textContent.trim();
                        
                        // Check if project name matches the pattern
                        if (regex.test(projectName.toLowerCase()) || projectName.toLowerCase().includes(searchTerm.toLowerCase())) {
                            row.style.display = '';
                            visibleCount++;
                        } else {
                            row.style.display = 'none';
                        }
                    }
                });
            }

            updateProjectCount(visibleCount, rows.length);
        }

        function clearSearch() {
            document.getElementById('projectSearch').value = '';
            filterProjects();
            document.getElementById('projectSearch').focus();
        }

        function updateProjectCount(visible = null, total = null) {
            const countElement = document.getElementById('projectCount');
            
            if (visible === null || total === null) {
                const allRows = document.querySelectorAll('tbody tr');
                total = allRows.length;
                visible = Array.from(allRows).filter(row => row.style.display !== 'none').length;
            }

            if (visible === total) {
                countElement.textContent = `Showing ${total} project${total !== 1 ? 's' : ''}`;
            } else {
                countElement.textContent = `Showing ${visible} of ${total} projects`;
            }
        }

        // Add keyboard shortcut for search (Ctrl+F or Ctrl+K)
        document.addEventListener('keydown', function(e) {
            if ((e.ctrlKey && (e.key === 'f' || e.key === 'k')) || e.key === '/') {
                e.preventDefault();
                document.getElementById('projectSearch').focus();
            }
        });
    </script>
}


