@{
    Layout = "_Layout";
}

@model PagedResult<AdoProjectManager.Models.AdoProject>

@{
    ViewData["Title"] = "Projects";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="bi bi-folder2-open"></i> Azure DevOps Projects</h1>
    <div>
        <a href="/ProjectClone" class="btn btn-primary me-2">
            <i class="bi bi-copy"></i> Clone Project
        </a>
        <a href="/ProjectWizard" class="btn btn-outline-primary me-2">
            <i class="bi bi-magic"></i> Element Wizard
        </a>
        <a href="/WorkItemDeployment" class="btn btn-outline-success me-2">
            <i class="bi bi-arrow-repeat"></i> Deploy Work Items
        </a>
        <button class="btn btn-outline-secondary" onclick="location.reload()">
            <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
    </div>
</div>

<!-- Search Filter -->
<div class="row mb-4">
    <div class="col-md-6">
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-search"></i>
            </span>
            <input type="text" class="form-control" id="projectSearch" placeholder="Search projects by name..." 
                   value="@Model.SearchQuery" autocomplete="off">
            <button class="btn btn-outline-secondary" type="button" onclick="clearSearch()">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <small class="text-muted">Use * for wildcard matching (e.g., "Test*" or "*API*")</small>
    </div>
    <div class="col-md-6 text-end">
        <small class="text-muted" id="projectCount">
            Showing @Model.Items.Count of @Model.TotalItems project(s)
            @if (Model.TotalPages > 1)
            {
                <span> - Page @Model.CurrentPage of @Model.TotalPages</span>
            }
        </small>
    </div>
</div>



@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
        @if (ViewBag.ShowSettingsLink == true)
        {
            <div class="mt-2">
                <a href="/Home/Settings" class="btn btn-sm btn-outline-danger">
                    <i class="bi bi-gear"></i> Configure Settings
                </a>
            </div>
        }
    </div>
}

@if (ViewBag.IsConfigurationMissing == true)
{
    <div class="card border-warning mb-4">
        <div class="card-body text-center">
            <h4 class="card-title text-warning">
                <i class="bi bi-gear-fill"></i> Welcome to Azure DevOps Project Manager
            </h4>
            <p class="card-text">
                Get started by configuring your Azure DevOps connection settings. You'll need:
            </p>
            <ul class="list-unstyled">
                <li><i class="bi bi-check-circle text-success"></i> Your Azure DevOps organization URL</li>
                <li><i class="bi bi-check-circle text-success"></i> A Personal Access Token (PAT) with appropriate permissions</li>
            </ul>
            <a href="/Home/Settings" class="btn btn-warning btn-lg">
                <i class="bi bi-gear"></i> Configure Now
            </a>
        </div>
    </div>
}

@if (Model.TotalItems == 0 && ViewBag.IsConfigurationMissing != true)
{
    <div class="text-center py-5">
        <i class="bi bi-inbox" style="font-size: 3rem; color: #6c757d;"></i>
        @if (!string.IsNullOrEmpty(Model.SearchQuery))
        {
            <h3 class="mt-3 text-muted">No projects found matching "@Model.SearchQuery"</h3>
            <p class="text-muted">Try adjusting your search criteria or clearing the search to see all projects.</p>
        }
        else
        {
            <h3 class="mt-3 text-muted">No projects found</h3>
            <p class="text-muted">Your Azure DevOps organization appears to have no projects, or they may not be accessible with your current permissions.</p>
        }
        <div class="mt-3">
            <a href="/Home/Settings" class="btn btn-outline-primary me-2">
                <i class="bi bi-gear"></i> Check Settings
            </a>
            <button class="btn btn-primary" onclick="location.reload()">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
        </div>
    </div>
}
else if (Model.TotalItems > 0)
{
    <!-- Projects table container -->
    <div id="projectsContainer">
        @await Html.PartialAsync("_ProjectsTable", Model)
    </div>
}

@section Scripts {
    <script>
        let searchTimeout;
        let currentSearchQuery = '@Model.SearchQuery';

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('projectSearch');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(performSearch, 500); // Debounce search
                });
                
                searchInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        clearTimeout(searchTimeout);
                        performSearch();
                    }
                });
            }
        });

        function performSearch() {
            const searchQuery = document.getElementById('projectSearch').value;
            currentSearchQuery = searchQuery;
            loadPage(1, searchQuery);
        }

        function clearSearch() {
            document.getElementById('projectSearch').value = '';
            currentSearchQuery = '';
            loadPage(1, '');
            document.getElementById('projectSearch').focus();
        }

        function loadPage(page, searchQuery = null) {
            if (searchQuery === null) {
                searchQuery = currentSearchQuery;
            }
            
            // Show loading indicator
            const container = document.getElementById('projectsContainer');
            if (container) {
                container.innerHTML = '<div class="text-center py-4"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            }

            // Build URL with parameters
            const url = new URL('/Home/SearchProjects', window.location.origin);
            url.searchParams.append('page', page);
            if (searchQuery) {
                url.searchParams.append('search', searchQuery);
            }

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    if (container) {
                        container.innerHTML = html;
                    }
                    
                    // Update browser URL without page reload
                    const newUrl = new URL(window.location);
                    newUrl.searchParams.set('page', page);
                    if (searchQuery) {
                        newUrl.searchParams.set('search', searchQuery);
                    } else {
                        newUrl.searchParams.delete('search');
                    }
                    window.history.pushState({}, '', newUrl);
                })
                .catch(error => {
                    console.error('Error loading projects:', error);
                    if (container) {
                        container.innerHTML = '<div class="alert alert-danger">Error loading projects. Please try again.</div>';
                    }
                });
        }

        // Handle browser back/forward buttons
        window.addEventListener('popstate', function(event) {
            location.reload();
        });

        // Add keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if ((e.ctrlKey && (e.key === 'f' || e.key === 'k')) || e.key === '/') {
                e.preventDefault();
                document.getElementById('projectSearch').focus();
            }
        });
    </script>
}


